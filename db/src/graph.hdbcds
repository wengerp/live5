namespace live5.db;

using "live5.db::tables.Tweets" as Tweets;
using "live5.db::PAL.UsersClustered" as UsersClustered;

context graph {
   entity Users {
      key user          : String(256) not null;
          tweets        : Integer;
          stance        : Integer;
          influence     : Integer;
          abuse         : Integer;
          clusterNumber : Integer;
   };
   entity Relationships {
      key key    : Integer64 generated by default as identity;
          source : String(256)            not null;
          target : String(256)            not null;
          type   : String(256);
          amount : Integer;
   };

   view VUsersRP as
      select from Tweets distinct
      {
         "replyUser"
      }
      where
         "replyUser" <> '';

   view VUsersRT as
      select from Tweets distinct
      {
         "retweetedUser"
      }
      where
         "retweetedUser" <> '';

   view VUsers as
      select from UsersClustered
      full join   VUsersRP       on
         VUsersRP.replyUser = UsersClustered.user
      full join   VUsersRT       on
         VUsersRT.retweetedUser = UsersClustered.user
      distinct
      {
         case
            when "replyUser" <> ''     then "replyUser"
            when "retweetedUser" <> '' then "retweetedUser"
            else                          "user"
         end           as user,
         tweets,
         stance,
         influence,
         abuse,
         clusterNumber
      };

   view VReplies as
      select from Tweets
      {
         'RP_' || max(id) as          key,
         "user"             as          source,
         replyUser        as          target,
         'replied' as                 type,
         cast(count(*) as integer) as amount
      }
      where
         "replyUser" <> ''
      group by
         "user",
         "replyUser";

   view VRetweets as
      select from Tweets
      {
         'RT_' || max("id") as          key,
         "user"             as          source,
         "retweetedUser"    as          target,
         'retweeted' as               type,
         cast(count(*) as integer) as amount
      }
      where
         "retweetedUser" <> ''
      group by
         "user",
         "retweetedUser";
};